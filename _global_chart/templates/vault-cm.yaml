
{{- if .Values.Vault -}}
{{- if .Values.Vault.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.Vault.VolumeCmName }}
data:
  consul-template.tpl: |-
    #!/bin/bash

    (( with secret "configvars/data/common" ))
    ######### START - Common project variables #########(( range $k, $v := .Data.data ))
    export (( $k | toUpper ))='(( $v ))'
    (( end ))######### END - Common project variables #########(( end ))
    (( with secret "secretvars/data/common" ))
    ######### START - Common project secrets #########(( range $k, $v := .Data.data ))
    export (( $k | toUpper ))='(( $v ))'
    (( end ))######### END - Common project secrets #########(( end ))

    (( if secrets "configvars/metadata" | contains "{{ .Values.Vault.VaultName }}" ))
    (( with secret "configvars/data/{{ .Values.Vault.VaultName }}" ))
    ######### START - Package specific variables #########(( range $k, $v := .Data.data ))
    export (( $k | toUpper ))='(( $v ))'
    (( end ))######### END - Package specific variables #########(( end ))
    (( end ))
    (( if secrets "secretvars/metadata" | contains "{{ .Values.Vault.VaultName }}" ))
    (( with secret "secretvars/data/{{ .Values.Vault.VaultName }}" ))
    ######### START - Package specific secrets #########(( range $k, $v := .Data.data ))
    export (( $k | toUpper ))='(( $v ))'
    (( end ))######### END - Package specific secrets #########(( end ))
    (( end ))
    
    {{- if .Values.Vault.commonProj }}
    (( if secrets "configvars/metadata" | contains "{{ .Values.Vault.commonProj }}" ))
    (( with secret "configvars/data/{{ .Values.Vault.commonProj }}" ))
    ######### START - Package specific variables #########(( range $k, $v := .Data.data ))
    export (( $k | toUpper ))='(( $v ))'
    (( end ))######### END - Package specific variables #########(( end ))
    (( end ))
    (( if secrets "secretvars/metadata" | contains "{{ .Values.Vault.commonProj }}" ))
    (( with secret "secretvars/data/{{ .Values.Vault.commonProj }}" ))
    ######### START - Package specific secrets #########(( range $k, $v := .Data.data ))
    export (( $k | toUpper ))='(( $v ))'
    (( end ))######### END - Package specific secrets #########(( end ))
    (( end ))
    {{- end}}
    
  vault-retrieve.hcl: |-
    exit_after_auth = true
    auto_auth {
        method "kubernetes" {
            {{- if .Values.Vault.vault_auth_path }}
            mount_path = "{{.Values.Vault.vault_auth_path}}"
            {{- else }}
            mount_path = "auth/k8s-tnz"
            {{- end }}
            config = {
                role = "rtrole"
            }
        }
    }

    log_level = "debug"

    template {
      source = "/consul-template/config/consul-template.tpl"
      destination = "/consul-template/data/runtime_secrets.sh"
      perms = 0644
      left_delimiter = "(("
      right_delimiter = "))"
      wait {
        min = "2s"
        max = "10s"
      }
    }

{{- end}}
{{- end}}    
